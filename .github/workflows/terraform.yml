name: Terraform AWS Deploy

on:
  workflow_dispatch:

jobs:
  terraform:
    name: Terraform Deploy
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: terraform

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.5.5

    - name: Terraform Init
      run: terraform init

    - name: Terraform Plan
      run: terraform plan -var "key_name=${{ secrets.AWS_KEY_PAIR_NAME }}"
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS_KEY }}

    - name: Terraform Apply
      run: terraform apply -auto-approve -var "key_name=${{ secrets.AWS_KEY_PAIR_NAME }}"
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS_KEY }}

    - name: Get Terraform Output (EC2 IP)
      id: get_ip
      working-directory: terraform
      run: |
        echo "EC2_IP=$(terraform output -raw public_ip)" >> $GITHUB_ENV

    - name: Decode PEM Key
      run: |
        echo "${{ secrets.AWS_PEM_BASE64 }}" | base64 -d > key.pem
        chmod 400 key.pem

    - name: Install Dependencies on EC2 (InfluxDB 2.x, Grafana, Python Libs)
      run: |
        ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@$EC2_IP << 'EOF'
          set -e
          sudo apt update
          sudo apt install -y wget curl gnupg2 software-properties-common
    
          # InfluxDB GPG 키 추가
          wget -qO- https://repos.influxdata.com/influxdata-archive_compat.key | \
            sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/influxdata-archive_compat.gpg
          echo "deb [signed-by=/etc/apt/trusted.gpg.d/influxdata-archive_compat.gpg] https://repos.influxdata.com/ubuntu \$(lsb_release -cs) stable" | \
            sudo tee /etc/apt/sources.list.d/influxdata.list
    
          sudo apt update
          sudo apt install -y influxdb2 grafana python3-pip
    
          # InfluxDB 서비스 이름 확인 후 활성화
          sudo systemctl enable influxdb
          sudo systemctl start influxdb
    
          # 서비스가 완전히 뜰 때까지 대기
          sleep 5
          until curl -s http://localhost:8086/health | grep -q '"status":"pass"'; do
            echo "Waiting for InfluxDB to be ready..."
            sleep 2
          done
    
          # InfluxDB 2.x 초기 설정
          influx setup \
            --bucket bpf-bucket \
            --org bpf-org \
            --username admin \
            --password admin123 \
            --token my-super-token \
            --force
    
          # Grafana 서비스 시작
          sudo systemctl enable grafana-server
          sudo systemctl start grafana-server
    
          # Python 라이브러리 설치
          pip3 install --upgrade pip
          pip3 install influxdb-client scikit-learn psutil
    
          mkdir -p ~/bpf-app
        EOF
    
